import os
import subprocess
import sys
import socket
import shutil

def clear():
    os.system('cls' if os.name == 'nt' else 'clear')

def check_tool(tool):
    return shutil.which(tool) is not None

def install_notice():
    print("Please manually install missing tools: nmap, snmpwalk, netcat (or equivalent), python3, git.")
    print("This script does NOT auto-install tools.")

def nmap_scan(target):
    if not check_tool('nmap'):
        print("Error: nmap not found.")
        install_notice()
        return
    print(f"Running nmap scan on {target} (ports 1-10000)...")
    subprocess.run(['nmap', '-sV', '-p', '1-10000', target])

def snmp_walk(target):
    if not check_tool('snmpwalk'):
        print("Error: snmpwalk not found.")
        install_notice()
        return
    print(f"Running snmpwalk on {target} (community: public)...")
    subprocess.run(['snmpwalk', '-v2c', '-c', 'public', target])

def send_message(target):
    message = input("Enter message to send to printer: ")
    try:
        with socket.create_connection((target, 9100), timeout=5) as sock:
            sock.sendall(message.encode())
        print("Message sent successfully.")
    except Exception as e:
        print(f"Failed to send message: {e}")

def run_pret(target):
    pret_path = shutil.which('pret.py') or shutil.which('pret')
    if pret_path is None:
        print("PRET not found. Clone it from https://github.com/RUB-NDS/PRET and add pret.py to your PATH.")
        return
    print(f"Running PRET against {target}...")
    subprocess.run([sys.executable, pret_path, target, '-p', '9100'])

def main():
    clear()
    print("==============================")
    print("   Simple Printer Pentest Tool ")
    print("==============================")
    target = input("Enter printer IP address: ").strip()
    if not target:
        print("No target specified, exiting.")
        sys.exit(0)

    while True:
        clear()
        print(f"Target: {target}")
        print("1) Nmap scan (ports 1-10000)")
        print("2) SNMP walk (community: public)")
        print("3) Send custom print message")
        print("4) Run PRET")
        print("5) Exit")
        choice = input("Choose an option: ").strip()

        if choice == '1':
            nmap_scan(target)
        elif choice == '2':
            snmp_walk(target)
        elif choice == '3':
            send_message(target)
        elif choice == '4':
            run_pret(target)
        elif choice == '5':
            print("Exiting. Goodbye!")
            break
        else:
            print("Invalid choice. Try again.")
        input("Press Enter to continue...")

if __name__ == "__main__":
    main()
